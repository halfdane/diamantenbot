from datetime import datetime
import requests
from xml.etree import ElementTree
from pyquery import PyQuery as pq
import pytz


def toFloat(input):
    if (type(input) == str):
        return float(input.replace(',', '.'))
    return input


def getOnVistaInformation():
    vol = 0
    d = pq('https://www.onvista.de/aktien/GAMESTOP-CORP-Aktie-US36467W1099?notation=35395953')

    for volumeElement in d('#exchangesLayer a[title!="Handelsplatz geschlossen"] span').items():
        a_volume = [int(s) for s in volumeElement.text().split() if s.isdigit()]
        vol += sum(a_volume)

    price = float(d('.KURSDATEN meta[property="schema:price"]').attr("content"))

    return {
        'price': price,
        'volume': vol,
    }


def eurToUsd():
    r = requests.get('https://www.ecb.europa.eu/stats/eurofxref/eurofxref-daily.xml')
    root = ElementTree.fromstring(r.content)

    for child in root.iter('*'):
        if ('currency' in child.attrib.keys() and child.attrib['currency'] == 'USD'):
            return toFloat(child.attrib['rate'])


def create_message():
    ger = pytz.timezone('Europe/Berlin')
    nyse = pytz.timezone('America/New_York')

    now = datetime.now()
    tg = getOnVistaInformation()
    rate = eurToUsd()

    return '\n'.join([
        "German market update (local time: %s) (nyse time: %s)  " % (
        now.astimezone(ger).strftime("%T"), now.astimezone(nyse).strftime("%T")),
        "$%.2f (â‚¬%.2f @%.4f on Tradegate) (volume: %s added up over all open exchanges)   " % (
        tg['price'] * rate, tg['price'], rate, tg['volume']),
        "",
        "automatically generated by [halfdane's diamantenbot](https://github.com/halfdane/diamantenbot)"
    ])


if __name__ == "__main__":
    print(create_message())
