from datetime import datetime
from pyquery import PyQuery as pq
import pytz
import logging
import re


def getTradeGateInformation():
    d = pq('https://www.tradegate.de/orderbuch.php?isin=US36467W1099')

    vol = \
        getLsVolume('https://www.ls-tc.de/de/aktie/gamestop-aktie') + \
        getLsVolume('https://www.ls-x.de/de/aktie/gamestop-aktie') + \
        int(d('#stueck').text())

    return {
        'price': float(d('#last').text().replace(',', '.')),
        'volume': vol
    }


def getLsVolume(url):
    d = pq(url)
    lines = d('tr [field="tradeTime"][decimals="2"]') \
        .filter(lambda i, this: re.match('[\d:]{8}.*?', pq(this).text())) \
        .parents('tr') \
        .find('[field="tradeSize"]').items()
    return sum([int(i.text()) for i in lines if i.text().isdigit()])


def eurToUsd():
    d = pq('https://www.onvista.de/devisen/Eurokurs-Euro-Dollar-EUR-USD')
    return float(d('.KURSDATEN span[data-push]').eq(0).text().replace(',', '.'))


def create_message():
    ger = pytz.timezone('Europe/Berlin')
    nyse = pytz.timezone('America/New_York')

    now = datetime.now()
    tg = getTradeGateInformation()
    rate = eurToUsd()

    return '\n'.join([
        "German market update (local time: %s) (nyse time: %s) "
        "(generated by halfdane's [Diamantenbot](https://github.com/halfdane/diamantenbot))  " %
            (now.astimezone(ger).strftime("%T"), now.astimezone(nyse).strftime("%T")),
        "**$%.2f** ([â‚¬%.2f](https://www.tradegate.de/orderbuch.php?isin=US36467W1099)@"
        "[%.4f](https://www.onvista.de/devisen/Eurokurs-Euro-Dollar-EUR-USD)) **volume: %s** ("
        "[TG](https://www.tradegate.de/orderbuch.php?isin=US36467W1099)+"
        "[LS-X](https://www.ls-x.de/de/aktie/gamestop-aktie)+"
        "[LS-TC](https://www.ls-tc.de/de/aktie/gamestop-aktie))  " % (
            tg['price'] * rate, tg['price'], rate, tg['volume'])
    ])


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    logging.info(create_message())
